name: Daily Carwow Sync with Selenium
on:
  schedule:
    # 日本時間 02:00（UTC 17:00 前日）
    - cron: '0 17 * * *'
  workflow_dispatch:
    inputs:
      makers:
        description: 'Specific makers to process (space-separated)'
        required: false
        default: ''
      limit:
        description: 'Limit number of vehicles to process'
        required: false
        default: ''
      test_mode:
        description: 'Run in test mode (process only 5 vehicles)'
        required: false
        default: 'false'
      use_selenium:
        description: 'Use Selenium for enhanced scraping'
        required: false
        default: 'false'

jobs:
  sync:
    runs-on: ubuntu-latest
    timeout-minutes: 360  # 6時間（全メーカー処理用）
    
    env:
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
      DEEPL_KEY: ${{ secrets.DEEPL_KEY }}
      GS_CREDS_JSON: ${{ secrets.GS_CREDS_JSON }}
      GS_SHEET_ID: ${{ secrets.GS_SHEET_ID }}
      GBP_TO_JPY: "185"
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Install Chrome and ChromeDriver (for Selenium)
      if: github.event.inputs.use_selenium == 'true'
      run: |
        # Chromeのインストール
        wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
        sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable
        
        # ChromeDriverは webdriver-manager が自動的に管理
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ "${{ github.event.inputs.use_selenium }}" = "true" ]; then
          pip install -r requirements_selenium.txt
        else
          pip install -r requirements.txt
        fi
    
    - name: Prepare arguments
      id: prepare
      run: |
        ARGS=""
        
        # Test mode
        if [ "${{ github.event.inputs.test_mode }}" = "true" ]; then
          ARGS="$ARGS --test"
        fi
        
        # Limit
        if [ -n "${{ github.event.inputs.limit }}" ]; then
          ARGS="$ARGS --limit ${{ github.event.inputs.limit }}"
        fi
        
        # Makers
        if [ -n "${{ github.event.inputs.makers }}" ]; then
          ARGS="$ARGS --makers ${{ github.event.inputs.makers }}"
        fi
        
        # Selenium
        if [ "${{ github.event.inputs.use_selenium }}" = "true" ]; then
          ARGS="$ARGS --selenium"
        fi
        
        echo "args=$ARGS" >> $GITHUB_OUTPUT
    
    - name: Run sync
      run: |
        echo "Starting sync at $(date)"
        python sync_manager.py ${{ steps.prepare.outputs.args }}
        echo "Sync completed at $(date)"
    
    - name: Upload logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: sync-logs-${{ github.run_number }}
        path: |
          *.log
          *.json
          body_type_cache.json
        retention-days: 7
